---
- name: Disable swap
  command: swapoff -a

- name: Comment out swap entry in /etc/fstab
  replace:
    path: /etc/fstab
    regexp: '^(.* swap .*)$'
    replace: '#\1'

- name: Configure kernel modules for containerd
  copy:
    content: |
      overlay
      br_netfilter
    dest: /etc/modules-load.d/containerd.conf
  become: true

- name: Load overlay kernel module
  command: modprobe overlay

- name: Load br_netfilter kernel module
  command: modprobe br_netfilter

- name: Configure sysctl settings for Kubernetes
  copy:
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1
    dest: /etc/sysctl.d/kubernetes.conf
  become: true

- name: Apply sysctl changes
  command: sysctl --system

- name: Download containerd release
  get_url:
    url: https://github.com/containerd/containerd/releases/download/v{{ containerd_version }}/containerd-{{ containerd_version }}-linux-amd64.tar.gz
    dest: "{{ ansible_env.HOME }}/containerd-{{ containerd_version }}-linux-amd64.tar.gz"
    checksum: sha256:{{ containerd_sha256sum }}

- name: Extract containerd archive
  command: tar Cxzvf /usr/local {{ ansible_env.HOME }}/containerd-{{ containerd_version }}-linux-amd64.tar.gz
  args:
    executable: /bin/bash

- name: Remove downloaded archive
  file:
    path: "{{ ansible_env.HOME }}/containerd-{{ containerd_version }}-linux-amd64.tar.gz"
    state: absent

- name: Create directory /usr/local/lib/systemd/system/
  file:
    path: /usr/local/lib/systemd/system/
    state: directory

- name: Download containerd.service file
  get_url:
    url: https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
    dest: /usr/local/lib/systemd/system/containerd.service

- name: Reload systemd
  systemd:
    daemon_reload: yes

- name: Enable and start containerd service
  systemd:
    name: containerd
    enabled: yes
    state: started

- name: Download runc binary
  get_url:
    url: https://github.com/opencontainers/runc/releases/download/v{{ runc_version }}/runc.amd64
    dest: "{{ ansible_env.HOME }}/runc.amd64"
    checksum: sha256:{{ runc_sha256sum }}

- name: Install runc binary
  command: install -m 755 {{ ansible_env.HOME }}/runc.amd64 /usr/local/sbin/runc

- name: Remove downloaded binary
  file:
    path: "{{ ansible_env.HOME }}/runc.amd64"
    state: absent

- name: Download CNI plugins archive
  get_url:
    url: https://github.com/containernetworking/plugins/releases/download/v{{ cni_plugins_version }}/cni-plugins-linux-amd64-v{{ cni_plugins_version }}.tgz
    dest: "{{ ansible_env.HOME }}/cni-plugins-linux-amd64-v{{ cni_plugins_version }}.tgz"
    checksum: sha256:{{ cni_plugins_sha256sum }}

- name: Create directory /opt/cni/bin
  file:
    path: /opt/cni/bin
    state: directory

- name: Extract CNI plugins archive
  command: tar Cxzvf /opt/cni/bin {{ ansible_env.HOME }}/cni-plugins-linux-amd64-v{{ cni_plugins_version }}.tgz

- name: Remove downloaded archive
  file:
    path: "{{ ansible_env.HOME }}/cni-plugins-linux-amd64-v{{ cni_plugins_version }}.tgz"
    state: absent

- name: Create directory /etc/containerd
  file:
      path: /etc/containerd
      state: directory

- name: Apply containerd configuration
  ansible.builtin.shell: containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
  changed_when: false

- name: Modify SystemdCgroup setting in config.toml
  replace:
    path: /etc/containerd/config.toml
    regexp: 'SystemdCgroup = false'
    replace: 'SystemdCgroup = true'
  notify: Restart containerd service
